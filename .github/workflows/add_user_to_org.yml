name: Member Onboarding
on:
  issues:
    types: [opened, edited]

jobs:
  check_issue_checklist:
    runs-on: ubuntu-latest
    steps:
      - name: Validate user input
        id: validation
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;

            console.log(issue.body);

            // Validate compliance checks
            const checkboxRegex = /\[x\]/gi;
            const checkboxes = issue.body.match(checkboxRegex) || [];
            let checklistComplete = checkboxes.length === 3;
            console.log(`Number of checks: ${checkboxes.length}`);

            // Validate email
            const emailRegex = /[a-zA-Z0-9._-]+@(allianz.)/;
            const email = issue.body.match(emailRegex);
            const emailIsValid = email !== null;
            console.log(`Email is valid: ${emailIsValid}`);
            
            // Extract organizations 
            const organizationRegex = /(### Organization\s*[\r\n])([^\r\n]+)/;
            const organizations = issue.body.match(organizationRegex)[2] || [];
            console.log(`Organizations: ${organizations}`);

            // Store outputs
            const passed = emailIsValid && checklistComplete;
            core.setOutput('passed', passed);
            core.setOutput('email', email);
            core.setOutput('organizations', organizations);

            // Add comment to issue if validation fails
            if (!passed) {
              let comment = 'Before proceeding:\n\n';
              if (!emailIsValid) {
                comment += 'Please use an email address from Allianz.\n';
              }
              if (!checklistComplete) {
                comment += 'Please make sure to check all checkboxes.';
              }
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

          

      - name: Sending invite to user
        if: steps.validation.outputs.passed == 'true'
        id: sending
        uses: actions/github-script@v6
        with:
          script: |
            const organizations = core.getInput('organizations');
            const email = core.getInput('email');

            organizations.split(',').forEach((organization) => {
              console.log(`Inviting user to organization ${organization}`);
              //github.rest.orgs.inviteUser({
              //  organization: organization,
              //  email: email
              //});
            });

            // Add comment to issue
            const comment = `Invited user to organizations ${organizations}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });